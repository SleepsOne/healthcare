# generate-schemas.ps1

# danh s√°ch services theo docker-compose
$services = @(
  'user-service',
  'patient-service',
  'appointment-service',
  'doctor-service',
  'prescription-service',
  'pharmacy-service'
)

# 1. Kh·ªüi ƒë·ªông c√°c container
Write-Host "üõ†  B·∫≠t t·∫•t c·∫£ service..."
docker-compose up -d | Out-Null
Start-Sleep -Seconds 5

# 2. T·∫°o th∆∞ m·ª•c docs n·∫øu ch∆∞a c√≥
$docsDir = ".\docs"
if (-not (Test-Path $docsDir)) {
    Write-Host "‚Üí T·∫°o th∆∞ m·ª•c $docsDir" -ForegroundColor Cyan
    New-Item -ItemType Directory -Path $docsDir | Out-Null
}

# 3. Sinh schema cho t·ª´ng service
foreach ($svc in $services) {
    $short = $svc -replace '-service',''  # v√≠ d·ª•: user
    $schemaFile = "$short.yml"
    $outPath = Join-Path $docsDir $schemaFile

    Write-Host "‚Üí Sinh schema cho $svc..." -ForegroundColor Cyan

    # Ch·∫°y trong container, pipe stdout v·ªÅ host file
    docker-compose exec -T $svc sh -c "python manage.py spectacular --format openapi" |
      Out-File -FilePath $outPath -Encoding utf8

    if (Test-Path $outPath) {
        Write-Host "  ‚Üí L∆∞u th√†nh docs\$schemaFile" -ForegroundColor Green
    } else {
        Write-Host "  [!] Kh√¥ng t·∫°o ƒë∆∞·ª£c $outPath" -ForegroundColor Yellow
    }
}

# 4. Bundling t·∫•t c·∫£ schema v√†o m·ªôt file duy nh·∫•t
Write-Host "‚Üí Bundling t·∫•t c·∫£ v√†o docs/all-services.yaml..." -ForegroundColor Cyan
# C√†i ƒë·∫∑t n·∫øu ch∆∞a c√≥: npm install -g @apidevtools/swagger-cli

# L·∫•y danh s√°ch t·∫•t c·∫£ .yml tr·ª´ all-services.yaml
$inputFiles = Get-ChildItem -Path $docsDir -Filter "*.yml" |
    Where-Object { $_.Name -ne 'all-services.yaml' } |
    ForEach-Object { $_.FullName }

# Chu·∫©n b·ªã v√† g·ªçi swagger-cli bundle
$args = @('bundle') + $inputFiles + @('-o', (Join-Path $docsDir 'all-services.yaml'), '--type', 'yaml')
& swagger-cli @args | Write-Host

# Ki·ªÉm tra k·∫øt qu·∫£
$bundlePath = Join-Path $docsDir 'all-services.yaml'
if (Test-Path $bundlePath) {
    Write-Host "‚úÖ T·∫°o th√†nh c√¥ng $bundlePath" -ForegroundColor Green
} else {
    Write-Host "‚ùå Bundling th·∫•t b·∫°i." -ForegroundColor Red
}
